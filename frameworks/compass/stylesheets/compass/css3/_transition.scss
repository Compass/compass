@import "shared";

// CSS Transitions
// Currently only works in Webkit.
//
// * expected in CSS3, FireFox 3.6/7 and Opera Presto 2.3
// * We'll be prepared.
//
// Including this submodule sets following defaults for the mixins:
//
//     $default-transition-property : all
//     $default-transition-duration : 1s
//     $default-transition-function : false
//     $default-transition-delay    : false
//
// Override them if you like. Timing-function and delay are set to false for browser defaults (ease, 0s).

$default-transition-property: all !default;

$default-transition-duration: 1s !default;

$default-transition-function: false !default;

$default-transition-delay: false !default;

$transitionable-prefixed-properties: transform, transform-origin !default;

// One or more properties to transition
//
// * for multiple, use a comma-delimited list
// * also accepts "all" or "none"

@mixin transition-property($properties: $default-transition-property) {
  @include prefix-friendly-transition(unquote($properties));
}

// One or more durations in seconds
//
// * for multiple, use a comma-delimited list
// * these durations will affect the properties in the same list position

@mixin transition-duration($duration: $default-transition-duration) {
  @if type-of($duration) == string { $duration: unquote($duration); }
  @include experimental(transition-duration, $duration,
    -moz, -webkit, -o, -ms, not -khtml, official
  );
}

// One or more timing functions
//
// * [ ease | linear | ease-in | ease-out | ease-in-out | cubic-bezier(x1, y1, x2, y2)]
// * For multiple, use a comma-delimited list
// * These functions will effect the properties in the same list position

@mixin transition-timing-function($function: $default-transition-function) {
  @include experimental(transition-timing-function, unquote($function),
    -moz, -webkit, -o, -ms, not -khtml, official
  );
}

// One or more transition-delays in seconds
//
// * for multiple, use a comma-delimited list
// * these delays will effect the properties in the same list position

@mixin transition-delay($delay: $default-transition-delay) {
  @if type-of($delay) == string { $delay: unquote($delay); }
  @include experimental(transition-delay, $delay,
    -moz, -webkit, -o, -ms, not -khtml, official
  );
}

// Transition all-in-one shorthand

@mixin single-transition(
  $property: $default-transition-property,
  $duration: $default-transition-duration,
  $function: $default-transition-function,
  $delay: $default-transition-delay
) {
  @if $property and $duration and $function {
    // Shorthand (see https://github.com/chriseppstein/compass/issues/585)
    @if $delay {
      -webkit-transition: $property $duration $function;
      -webkit-transition-delay: $delay;
      @include experimental(transition, $property $duration $function $delay,
        -moz,
        not -webkit,
        -o,
        -ms,
        not -khtml,
        official
      );
    }
    @else {
      @include experimental(transition, $property $duration $function,
        -moz,
        -webkit,
        -o,
        -ms,
        not -khtml,
        official
      );
    }
  }
  @else {
    @include transition-property($property);
    @include transition-duration($duration);
    @if $function { @include transition-timing-function($function); }
    @if $delay { @include transition-delay($delay); }
  }
}

@mixin transition(
  $transition-1 : default,
  $transition-2 : false,
  $transition-3 : false,
  $transition-4 : false,
  $transition-5 : false,
  $transition-6 : false,
  $transition-7 : false,
  $transition-8 : false,
  $transition-9 : false,
  $transition-10: false
) {
  @if $transition-1 == default {
    $transition-1 : -compass-space-list(compact($default-transition-property, $default-transition-duration, $default-transition-function, $default-transition-delay));
  }

  $transition : compact($transition-1, $transition-2, $transition-3, $transition-4, $transition-5, $transition-6, $transition-7, $transition-8, $transition-9, $transition-10);
  @include prefix-friendly-transition($transition);
}

@function array-push($array, $object, $comma: false) {
  @if $comma {
    @if $array {
      $array: $array, $object;
    } @else {
      $array: $object;
    }
  } @else {
    @if $array {
      $array: $array $object;
    } @else {
      $array: $object;
    }
  }

  @return $array;
}

@function string-join($existing, $addition) {
  @if $existing {
    @if $addition {
      $existing: $existing $addition;
    }
  } @else {
    $existing: $addition;
  }

  @return $existing;
}

@mixin prefix-friendly-transition($transition) {
  $raw-transition: -compass-space-list($transition);

  $webkit-transition: false;
  $moz-transition: false;
  $ms-transition: false;
  $o-transition: false;

  @each $single-transition in $raw-transition {
    $property: nth($single-transition, 1);
    $match: false;

    @each $prefixed-property in $transitionable-prefixed-properties {
      @if $property == $prefixed-property {
        $match: true;
      }
    }

    @if $match {
      $single-transition-suffix: false;

      @for $i from 2 through length($single-transition) {
        $single-transition-suffix: array-push($single-transition-suffix, nth($single-transition, $i));
      }

      $webkit-transition: array-push($webkit-transition, string-join(-webkit-#{$property}, $single-transition-suffix), true);
      $moz-transition: array-push($moz-transition, string-join(-moz-#{$property}, $single-transition-suffix), true);
      $ms-transition: array-push($ms-transition, string-join(-ms-#{$property}, $single-transition-suffix), true);
      $o-transition: array-push($o-transition, string-join(-o-#{$property}, $single-transition-suffix), true);
    } @else {
      $webkit-transition: array-push($webkit-transition, $single-transition, true);
      $moz-transition: array-push($moz-transition, $single-transition, true);
      $ms-transition: array-push($ms-transition, $single-transition, true);
      $o-transition: array-push($o-transition, $single-transition, true);
    }
  }

  -webkit-transition: $webkit-transition;
  -moz-transition: $moz-transition;
  -ms-transition: $ms-transition;
  -o-transition: $o-transition;

  @include experimental(transition, $transition,
    not -moz, not -webkit, not -o, not -ms, not -khtml, official
  );
}
